{"version":3,"sources":["utility/TextWrapper.js","utility/Select.js","components/EMI/Uranus/Form/Form.js","components/EMI/Uranus/Form/FormValidation.js","components/EMI/Uranus/Data/Data.js","components/EMI/Uranus/Steps/FirstStep.js","components/EMI/Uranus/Steps/ErrorRender.js","components/EMI/Uranus/Steps/SpanRender.js","components/EMI/Uranus/Steps/FinalStep.js","components/EMI/Uranus/Steps/SecondStep.js","components/EMI/Uranus/Data/Api.js","components/EMI/Uranus/Steps/Handler.js","components/EMI/Uranus/index.js","components/EMI/Emi.js","components/REMITTANCE/Remittance.js","components/App.js","index.js"],"names":["TextFieldWrapper","name","otherprops","useField","field","meta","config","fullWidth","variant","touched","error","helperText","TextField","Select","options","setFieldValue","useFormikContext","select","onChange","e","value","target","Object","keys","map","item","pos","MenuItem","MyForm","FormField","title","Grid","direction","style","margin","container","spacing","color","letterSpacing","el","xs","label","TextWrapper","Button","borderColor","type","string","Yup","FORM_VALIDATION_FIRST","shape","request_id","required","FORM_VALIDATION_SECOND","mobile_number","length","amount","min","purpose","FormFieldFirst","FormFieldSecond","data1","data2","data3","FirstStep","useContext","AllData","data","handleNext","justify","Card","CardContent","initialValues","validationSchema","onSubmit","values","ErrorRender","message","handlePrev","onClick","Span","render","marginLeft","FinalStep","res","response_code","response_message","customer_name","Response","SecondStep","get","console","log","alignItems","sm","properties","savings","backgroundColor","height","account_no","account_type","accrued_amount","balance","branch_name","Api","axios","create","baseURL","headers","Authorization","process","Handler","useState","step","setStep","setRes","setGet","setData","flag","payload","post","then","catch","err","submitData","getData","prev","createContext","Uranus","Steps","Provider","Emi","setSelect","Remittance","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.114cff13.chunk.js","sourcesContent":["import { TextField } from '@material-ui/core/';\r\nimport { useField } from 'formik';\r\n\r\nconst TextFieldWrapper = ({ name, ...otherprops }) => {\r\n  const [field, meta] = useField(name);\r\n  const config = {\r\n    ...field,\r\n    ...otherprops,\r\n    fullWidth: true,\r\n    variant: 'standard',\r\n  };\r\n\r\n  if (meta && meta.touched && meta.error) {\r\n    config.error = true;\r\n    config.helperText = meta.error;\r\n  }\r\n\r\n  return <TextField {...config} />;\r\n};\r\n\r\nexport default TextFieldWrapper;\r\n","import { TextField, MenuItem } from '@material-ui/core';\r\nimport { useField, useFormikContext } from 'formik';\r\n\r\nconst Select = ({ name, options, ...otherprops }) => {\r\n  const [field, meta] = useField(name);\r\n  const { setFieldValue } = useFormikContext();\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    setFieldValue(name, value);\r\n  };\r\n  const config = {\r\n    ...field,\r\n    ...otherprops,\r\n    select: true,\r\n    variant: 'standard',\r\n    fullWidth: true,\r\n    onChange: handleChange,\r\n  };\r\n  if (meta && meta.touched && meta.error) {\r\n    config.error = true;\r\n    config.helperText = meta.error;\r\n  }\r\n  return (\r\n    <>\r\n      <TextField {...config}>\r\n        {Object.keys(options).map((item, pos) => {\r\n          return (\r\n            <MenuItem key={pos} value={item}>\r\n              {options[item]}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </TextField>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import TextWrapper from '../../../../utility/TextWrapper';\r\nimport Select from '../../../../utility/Select';\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Form } from 'formik';\r\n\r\nconst MyForm = ({ FormField, title }) => {\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Grid\r\n          direction='column'\r\n          style={{ margin: 'auto' }}\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <h3 style={{ color: '#3399FF', letterSpacing: 1 }}>{title}</h3>\r\n          </Grid>\r\n          {FormField.map(el => {\r\n            return (\r\n              <Grid style={{ color: '#3399FF' }} xs={10} key={el.name} item>\r\n                {el.options ? (\r\n                  <Select\r\n                    name={el.name}\r\n                    label={el.label}\r\n                    options={el.options}\r\n                  />\r\n                ) : (\r\n                  <TextWrapper name={el.name} label={el.label} />\r\n                )}\r\n              </Grid>\r\n            );\r\n          })}\r\n          <Grid item>\r\n            <Button\r\n              style={{ color: '#3399FF', borderColor: '#3399FF' }}\r\n              type='submit'\r\n              variant='outlined'\r\n            >\r\n              Next\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n","import * as Yup from 'yup';\r\nconst string = Yup.string();\r\nexport const FORM_VALIDATION_FIRST = Yup.object().shape({\r\n  request_id: string.required('Request Number is required'),\r\n});\r\nexport const FORM_VALIDATION_SECOND = Yup.object().shape({\r\n  mobile_number: string\r\n    .required('This Field is required')\r\n    .length(10, 'Mobile Number Should be exactly 10 digits'),\r\n  amount: Yup.number()\r\n    .required('This Field is required')\r\n    .min(100, 'Amount must be greater than or equal to NRS 100'),\r\n  purpose: string.required('This Field is required'),\r\n});\r\n","export const Agent = {\r\n  data1: 'dummy1',\r\n  data2: 'dummy2',\r\n  data3: 'dummy2',\r\n};\r\n\r\nexport const Purpose = {\r\n  data1: 'car',\r\n  data2: 'loan',\r\n  data3: 'house loan',\r\n};\r\n\r\nexport const FormFieldFirst = [\r\n  {\r\n    name: 'request_id',\r\n    label: 'Request Number',\r\n  },\r\n];\r\n\r\nexport const FormFieldSecond = [\r\n  {\r\n    name: 'mobile_number',\r\n    label: 'Mobile Number',\r\n  },\r\n  {\r\n    name: 'amount',\r\n    label: 'Amount',\r\n  },\r\n  {\r\n    name: 'purpose',\r\n    label: 'Purpose',\r\n    options: Purpose,\r\n  },\r\n];\r\n","import { Formik } from 'formik';\r\nimport React, { useContext } from 'react';\r\nimport { AllData } from '../index';\r\nimport MyForm from '../Form/Form';\r\nimport { FORM_VALIDATION_FIRST } from '../Form/FormValidation';\r\nimport { FormFieldFirst } from '../Data/Data';\r\nimport { Card, CardContent, Grid } from '@material-ui/core';\r\nconst FirstStep = () => {\r\n  const { data, handleNext } = useContext(AllData);\r\n  const handleSubmit = values => {\r\n    handleNext(values, 'get');\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid justify='center' container>\r\n        <Grid item>\r\n          <Card>\r\n            <CardContent>\r\n              <Formik\r\n                initialValues={{ ...data }}\r\n                validationSchema={FORM_VALIDATION_FIRST}\r\n                onSubmit={handleSubmit}\r\n              >\r\n                <MyForm\r\n                  title='Enter Request Number To Proceed'\r\n                  FormField={FormFieldFirst}\r\n                />\r\n              </Formik>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstStep;\r\n","import { Button, Grid } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport { AllData } from '../index';\r\n\r\nconst ErrorRender = ({ message }) => {\r\n  const { handlePrev } = useContext(AllData);\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid xs={12} item>\r\n          <h1>{message}</h1>\r\n          <Button onClick={handlePrev} variant='outlined'>\r\n            Back\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorRender;\r\n","import React from 'react';\r\n\r\nconst Span = ({ render }) => {\r\n  return (\r\n    <span\r\n      style={{\r\n        color: '#009966',\r\n        marginLeft: '4px',\r\n      }}\r\n    >\r\n      {render}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Span;\r\n","import { Card, CardContent, Grid } from '@material-ui/core';\r\nimport { useContext } from 'react';\r\nimport { AllData } from '../index';\r\nimport ErrorRender from './ErrorRender';\r\nimport Span from './SpanRender';\r\n\r\nconst FinalStep = () => {\r\n  const { res, data } = useContext(AllData);\r\n  if (Object.keys(res).length === 0) {\r\n    return <h4>Loading</h4>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Grid justify='center' container>\r\n          <Card>\r\n            <CardContent>\r\n              {res.response_code === 0 ? (\r\n                <div>\r\n                  <h3>\r\n                    Request Number :<Span render={res.request_id} />\r\n                  </h3>\r\n                  <h3>\r\n                    Status :<Span render={res.response_message} />\r\n                  </h3>\r\n                  <h3>\r\n                    Customer Name :\r\n                    <Span render={data.customer_name} />\r\n                  </h3>\r\n                  <h3>\r\n                    Total Amount (Charge Inc.) :\r\n                    <Span render={res.amount} />\r\n                  </h3>\r\n                </div>\r\n              ) : (\r\n                <ErrorRender message={res.Response} />\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default FinalStep;\r\n","import { Button, Card, CardContent, Grid } from '@material-ui/core';\r\nimport { Formik } from 'formik';\r\nimport React from 'react';\r\nimport { useContext } from 'react';\r\nimport { AllData } from '../index';\r\nimport MyForm from '../Form/Form';\r\nimport { FormFieldSecond } from '../Data/Data';\r\nimport { FORM_VALIDATION_SECOND } from '../Form/FormValidation';\r\nimport Span from './SpanRender';\r\nimport ErrorRender from './ErrorRender';\r\n\r\nconst SecondStep = () => {\r\n  const { get, data, handleNext } = useContext(AllData);\r\n  console.log(get);\r\n  const handleSubmit = values => {\r\n    values.customer_name = get.properties.customer_name;\r\n    values.branch_name = get.properties.branch_name;\r\n    handleNext(values, 'post');\r\n  };\r\n\r\n  if (Object.keys(get).length === 0) {\r\n    return <h4>Loading</h4>;\r\n  } else {\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardContent>\r\n            {get.response_code === 0 ? (\r\n              <div>\r\n                <Grid spacing={4} alignItems='center' container>\r\n                  <Grid xs={12} sm={8} item>\r\n                    <h3>\r\n                      Amount :<Span render={get.amount} />\r\n                    </h3>\r\n                    <h3>\r\n                      Customer Name :\r\n                      <Span render={get.properties.customer_name} />\r\n                    </h3>\r\n\r\n                    <Card>\r\n                      <CardContent>\r\n                        <h3> Savings </h3>\r\n                        <Grid spacing={2} direction='row' container>\r\n                          {get.properties.savings.map(el => {\r\n                            return (\r\n                              <Grid\r\n                                style={{ letterSpacing: 1 }}\r\n                                key={el.account_no}\r\n                                xs={4}\r\n                                item\r\n                              >\r\n                                <Card>\r\n                                  <div\r\n                                    style={{\r\n                                      backgroundColor: '#009966',\r\n                                      height: '20px',\r\n                                    }}\r\n                                  ></div>\r\n                                  <CardContent>\r\n                                    <h5>Account Number : {el.account_no}</h5>\r\n                                    <h5>Account Type : {el.account_type}</h5>\r\n                                    <h5>\r\n                                      Accrued Amount :\r\n                                      <Span render={el.accrued_amount} />\r\n                                    </h5>\r\n                                    <h5>Balance: {el.balance}</h5>\r\n                                  </CardContent>\r\n                                </Card>\r\n                              </Grid>\r\n                            );\r\n                          })}\r\n                        </Grid>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid xs={12} sm={4} item>\r\n                    <Card>\r\n                      <div\r\n                        style={{ backgroundColor: '#3399FF', height: '20px' }}\r\n                      ></div>\r\n                      <CardContent>\r\n                        <Formik\r\n                          initialValues={data}\r\n                          validationSchema={FORM_VALIDATION_SECOND}\r\n                          onSubmit={handleSubmit}\r\n                        >\r\n                          <MyForm\r\n                            title='Fill this form to pay'\r\n                            FormField={FormFieldSecond}\r\n                          />\r\n                        </Formik>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <ErrorRender message={get.Response} />\r\n              </>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SecondStep;\r\n","import axios from 'axios';\r\n\r\nconst baseURL = 'https://emi.sajilopay.com.np/api/uranus';\r\nconst headers = {\r\n  Authorization: process.env.REACT_APP_token,\r\n};\r\n\r\nconst Api = axios.create({\r\n  baseURL,\r\n  headers,\r\n});\r\n\r\nexport default Api;\r\n","import { useState } from 'react';\r\nimport Api from '../Data/Api';\r\n\r\nconst Handler = () => {\r\n  const [step, setStep] = useState(0);\r\n  const [res, setRes] = useState({});\r\n  const [get, setGet] = useState({});\r\n  const [data, setData] = useState({\r\n    branch_name: '',\r\n    request_id: '',\r\n    customer_name: '',\r\n    mobile_number: '',\r\n    amount: 0,\r\n    purpose: '',\r\n  });\r\n  const submitData = values => {\r\n    console.log(values);\r\n    const payload = {\r\n      branch_name: values.branch_name,\r\n      request_id: values.request_id,\r\n      amount: values.amount,\r\n      mobile_number: values.mobile_number,\r\n      customer_name: values.customer_name,\r\n    };\r\n\r\n    Api.post('/payment/', payload)\r\n      .then(res => setRes(res.data))\r\n      .catch(err => err.message);\r\n  };\r\n  const getData = values => {\r\n    const payload = {\r\n      request_id: values.request_id,\r\n    };\r\n    console.log(values.request_id);\r\n    Api.post('/get_detail/', payload)\r\n      .then(res => {\r\n        setGet(res.data);\r\n      })\r\n      .catch(err => err.message);\r\n  };\r\n  const handleNext = (values, flag) => {\r\n    if (flag === 'post') {\r\n      submitData(values);\r\n    }\r\n    if (flag === 'get') {\r\n      getData(values);\r\n    }\r\n    setStep(prev => prev + 1);\r\n    setData(prev => ({ ...prev, ...values }));\r\n  };\r\n  const handlePrev = () => {\r\n    setRes({});\r\n    setStep(prev => prev - 1);\r\n  };\r\n  return { handleNext, handlePrev, step, res, data, get };\r\n};\r\n\r\nexport default Handler;\r\n","import FirstStep from './Steps/FirstStep';\r\nimport FinalStep from './Steps/FinalStep';\r\nimport SecondStep from './Steps/SecondStep';\r\n\r\nimport { createContext } from 'react';\r\nimport Handler from './Steps/Handler';\r\n\r\nconst AllData = createContext();\r\n\r\nconst Uranus = () => {\r\n  const { handleNext, handlePrev, get, data, step, res } = Handler();\r\n\r\n  const Steps = [<FirstStep />, <SecondStep />, <FinalStep />];\r\n\r\n  return (\r\n    <>\r\n      <AllData.Provider value={{ handleNext, data, get, res, handlePrev }}>\r\n        {Steps[step]}\r\n      </AllData.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Uranus;\r\nexport { AllData };\r\n","import { Button } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport Uranus from './Uranus';\r\n\r\nconst Emi = () => {\r\n  const [select, setSelect] = useState(0);\r\n  switch (select) {\r\n    case 1:\r\n      return <Uranus />;\r\n    case 2:\r\n      return <h1>Under Maintainance</h1>;\r\n    default:\r\n      return (\r\n        <>\r\n          <Button onClick={() => setSelect(1)} variant='outlined'>\r\n            Uranus\r\n          </Button>\r\n        </>\r\n      );\r\n  }\r\n};\r\n\r\nexport default Emi;\r\n","import React from 'react';\r\n\r\nconst Remittance = () => {\r\n  return <div>Remittance Coming soon...</div>;\r\n};\r\n\r\nexport default Remittance;\r\n","import { Button } from '@material-ui/core';\nimport { useState } from 'react';\nimport EMI from './EMI/Emi';\nimport Remittance from './REMITTANCE/Remittance';\nconst App = () => {\n  const [select, setSelect] = useState(0);\n  switch (select) {\n    case 1:\n      return <Remittance />;\n    case 2:\n      return (\n        <>\n          <Button variant='outlined' onClick={() => setSelect(1)}>\n            Remittance\n          </Button>\n          <Button\n            style={{ marginLeft: '20px' }}\n            variant='outlined'\n            onClick={() => setSelect(2)}\n          >\n            EMI\n          </Button>\n        </>\n      );\n    default:\n      return <EMI />;\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}